# Шаблон для установки
.install_template:
  script:
    - ansible-playbook -i ansible/inventory/hosts ansible/all.yml --tags "$TAGS" --limit "$SERVER_LIMIT"
    - PLAYBOOK_STATUS=$?
    - FILENAME="${SERVER_LIMIT}_$FILE_SUFFIX"
    - |
      if [ $PLAYBOOK_STATUS -eq 0 ]; then
        echo "$SERVER_LIMIT - success" > "$FILENAME"
      else
        echo "$SERVER_LIMIT - failed" > "$FILENAME"
        exit 1
      fi
    - ls -al  # Проверка наличия созданных файлов
    - cat "$FILENAME"  # Проверка содержимого файла

# Шаблон для установки пакетов
.package_template:
  extends: .install_template
  variables:
    TAGS: package
    FILE_SUFFIX: packages.txt

# Шаблон для установки IP
.ip_template:
  extends: .install_template
  variables:
    TAGS: ip
    FILE_SUFFIX: ip.txt

# Шаблон для уведомлений
.notify_template:
  stage: notify_ip
  image: alpine:latest
  before_script:
    - apk add --no-cache curl
  script:
    - MESSAGE="Результаты выполнения Ansible playbooks:\n"
    - COUNTER=1
    - echo "Files present in the directory:"
    - ls -l
    - |
      for file in $NOTIFY_FILES; do
        if [ -f "$file" ]; then
          SERVER=$(cat "$file" | cut -d ' ' -f 1)
          STATUS=$(cat "$file" | cut -d ' ' -f 3)
          if [ "$STATUS" == "success" ]; then
            MESSAGE="${MESSAGE}${COUNTER}) playbook #${PLAYBOOK_INDEX} выполнен успешно для ${SERVER}\n"
          else
            MESSAGE="${MESSAGE}${COUNTER}) playbook #${PLAYBOOK_INDEX} завершился с ошибкой для ${SERVER}\n"
          fi
          COUNTER=$((COUNTER + 1))
        else
          echo "File $file does not exist."
        fi
      done
    - echo -e "$MESSAGE"
    - |
      RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" -d "chat_id=$TELEGRAM_CHAT_ID" -d "text=$(echo -e "$MESSAGE")")
      echo "Response from Telegram API: $RESPONSE"
      if echo "$RESPONSE" | grep -q '"ok":false'; then
        echo "Ошибка отправки сообщения. Проверьте Telegram API и токен."
        exit 1
      fi
  artifacts:
    paths:
      - "r*.txt"
  when: always
